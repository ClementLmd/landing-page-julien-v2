---
import type { ItemGrid as Props } from '~/types';
import { Icon } from 'astro-icon/components';
import { twMerge } from 'tailwind-merge';
import Button from './Button.astro';

const { items = [], defaultIcon = '', classes = {} } = Astro.props;

const {
  container: containerClass = '',
  panel: panelClass = '',
  title: titleClass = '',
  description: descriptionClass = '',
  icon: defaultIconClass = 'text-primary',
} = classes;
---

{
  items && (
    <a href={'/'} target={'_self'} class="group" class:list-reset>
      <div class={twMerge(`flex justify-center w-auto`, containerClass)}>
        {items.map(({ title, description, icon, callToAction, classes: itemClasses = {} }) => (
          <div
            class={twMerge(
              'relative justify-center items-stretch flex flex-col intersect-once motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade',
              panelClass,
              itemClasses?.panel
            )}
          >
            {(icon || defaultIcon) && (
              <Icon name={icon || defaultIcon} class={twMerge('mb-2 w-10 h-10', defaultIconClass, itemClasses?.icon)} />
            )}
            <div class={twMerge('text-xl font-bold', titleClass, itemClasses?.title)}>{title}</div>
            {description && (
              <p
                class={twMerge('text-muted mt-2', descriptionClass, itemClasses?.description)}
                set:html={description}
              />
            )}
            {callToAction && (
              <div class="mt-2">
                <Button {...callToAction} />
              </div>
            )}
          </div>
        ))}
      </div>
    </a>
  )
}
